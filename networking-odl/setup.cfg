[metadata]
name = networking-odl
summary = OpenStack Networking
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
license = Apache-2.0
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7

[files]
packages =
    networking_odl
data_files =
    etc/neutron =
        etc/neutron/plugins/ml2/ml2_conf_odl.ini

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
# NOTE(asomya): The V2 ML2 driver and service_plugin is experimental and only
# for testing and evaluation purposes. Once the driver/service_plugin has been
# proven to be reliable, the current driver/service_plugin will be replaced by
# the V2 versions. Please take care to only specify a single version of the ML2
# driver and service_plugin in the configuration files. Mix-matching between
# different versions of the ML2 drivers/service_plugins will cause a lot of
# issues in your environment.
#
# Allowed configuration settings:
#
# [ml2]
# mechanism_drivers = opendaylight
# [DEFAULT]
# service_plugins = odl-router
#
# OR
#
# [ml2]
# mechanism_drivers = opendaylight_v2
# [DEFAULT]
# service_plugins = odl-router_v2
neutron.ml2.mechanism_drivers =
    opendaylight = networking_odl.ml2.mech_driver:OpenDaylightMechanismDriver
    opendaylight_v2 = networking_odl.ml2.mech_driver_v2:OpenDaylightMechanismDriver
neutron.service_plugins =
    odl-router = networking_odl.l3.l3_odl:OpenDaylightL3RouterPlugin
    odl-router_v2 = networking_odl.l3.l3_odl_v2:OpenDaylightL3RouterPlugin
neutron.db.alembic_migrations =
    networking-odl = networking_odl.db.migration:alembic_migrations
networking_odl.ml2.port_binding_controllers =
    network-topology = networking_odl.ml2.network_topology:NetworkTopologyManager
    legacy-port-binding = networking_odl.ml2.legacy_port_binding:LegacyPortBindingManager

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = networking_odl/locale/networking-odl.pot

[compile_catalog]
directory = networking_odl/locale
domain = networking-odl

[update_catalog]
domain = networking-odl
output_dir = networking_odl/locale
input_file = networking_odl/locale/networking-odl.pot

[wheel]
universal = 1
